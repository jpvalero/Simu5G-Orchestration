[General]
image-path=../../../images
cmdenv-express-mode = true
cmdenv-autoflush = true
network = simu5g.simulations.NR.mec.orchestration.mec_network


##########################################################
#            Output Format Results                       #
##########################################################
num-rngs = 3
repeat = 1
seed-set = ${repetition}
output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec
**.routingRecorder.enabled = false
#**.scalar-recording = false
**.ue[*].app[*].**.vector-recording = true
**.vector-recording = false
**.sctp.**.scalar-recording = false  # remove annoying statistics from SCTP
**.sctp.**.vector-recording = false  # remove annoying statistics from SCTP



##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = true

sim-time-limit = 60s
warmup-period = 10s

*.playgroundSizeX = 1100m
*.playgroundSizeY = 800m
*.playgroundSizeZ = 50m


############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")

############### SCTP configuration ##################
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false

##########################################################
#              NR specific parameters                   #
##########################################################
*.gNodeB*.cellInfo.broadcastMessageInterval = 0.5s
**.fbPeriod = 40   # reports CQI every 40ms
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI" 
**.targetBler = 0.01
**.blerShift = 5  

**.downlink_interference = true
**.uplink_interference = true
**.ueTxPower = 26
**.eNodeBTxPower = 46

#######################################################
#        CA and channel model configuration           # 
#######################################################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numBands =  25 #${numBands=25}

*.*.cellularNic.LteChannelModelType = "NRChannelModel"
*.gNodeB1.cellularNic.numCarriers = 1
*.gNodeB1.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.numCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0


##########################################################
#                      Mobility                          #			
##########################################################		
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMaxY = 1000m


*.ue[*].mobility.initFromDisplayString = false

*.gNodeB1.mobility.initFromDisplayString = true

**.numUes = 1
**.ue[0].mobility.initialX = ${uex = 180m}
**.ue[0].mobility.initialY = ${uey = 180m}
#**.bgUe_0.mobility.initialX = uniform(100m, 250m)
#**.bgUe_0.mobility.initialY = uniform(100m, 250m)

**.ue[*].masterId = 1    
**.ue[*].macCellId = 1   
**.ue[*].nrMasterId = 1
**.ue[*].nrMacCellId = 1
**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1

# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)


##########################################################
#                _MEC Host Side_		                 #
##########################################################
# resources available
*.mecHost*.maxMECApps = 100		#max ME Apps to instantiate
*.mecHost*.maxRam = 32GB		#max KBytes of Ram Space 
*.mecHost*.maxDisk = 100TB		#max KBytes of Ram Space 
*.mecHost*.maxCpuSpeed = 8000000	#max CPU speed in MIPs -> ~20 i9 CPUs
# MIPs example
# Intel Core i9-9900K (8-core) 					412,090 MIPS at 4.7 GHz
# Raspberry Pi 2 (quad-core ARM Cortex A7) 		4,744 MIPS at 1.0 GHz

#----------------------------------------
*.mecHost*.vim.scheduling = "fair"
*.mecHost*.eNBList = "gNodeB1"


*.mecHost*.mecPlatformManager.mecOrchestrator = "mecOrchestrator"
**.mecOrchestrator.mecHostList = "mecHost1" # used for the foreground mec apps

**.bgMecAppManager.mecHostList = "mecHost1, mecHost2" # used for the background mec apps

# parameters to visualize the bg UEs near the foreground one
**.bgMecAppManager.centerX = ${uex}
**.bgMecAppManager.centerY = ${uey}
**.bgMecAppManager.radius = 50m

**.bgMecAppManager.defaultRam = 100MB
**.bgMecAppManager.defaultDisk = 100MB
**.bgMecAppManager.defaultCpu = 1

**.bgMecAppManager.maxBgMecApps = 99
**.bgMecAppManager.minBgMecApps = 1
##########################################################



##########################################################
#                    App Layer                           #
##########################################################
*.ue[*].numApps = 1
**.mecHost1.numIndependentMecApp = 1
**.mecHost1.*.numIndependentMecApp = 1

**.mecHost2.numIndependentMecApp = 0
**.mecHost2.*.numIndependentMecApp = 0

*.mecHost*.independentMecApp[*].enableVimComputing = true

*.ue[*].app[*].typename = "CbrRequester" 
*.ue[*].app[*].PacketSize = 80 
*.ue[*].app[*].sampling_time = 0.2s 
*.ue[*].app[*].localPort = 1000
*.ue[*].app[*].destAddress = "mecHost1.virtualisationInfrastructure"
*.ue[*].app[*].destPort = 3000+ancestorIndex(1)   
*.ue[*].app[*].startTime = 0.05s

*.mecHost1.independentMecApp[*].typename = "CbrResponder"   
*.mecHost1.independentMecApp[*].PacketSize = 50 
*.mecHost1.independentMecApp[*].destAddress = "ue["+string(ancestorIndex(0))+"]" # obtain the address of the client by reading its index in the array of Apps 
*.mecHost1.independentMecApp[*].destPort = 1000  
*.mecHost1.independentMecApp[*].localPort = 3000+ancestorIndex(0)  
*.mecHost1.independentMecApp[*].serviceComplexity = 0.1 # expressed in MIPs

*.ue[*].app[*].enableLocalComputation = false 	
##########################################################





# ----------------------------------------------------------------------------- #
# Config without the trace file. Every delta time a mec app is instantiated
#
[Config Deltatime]
**.bgMecAppManager.fromTraceFile = false
**.bgMecAppManager.deltaTime = 1s
**.bgMecAppManager.admissionControl = false

# ----------------------------------------------------------------------------- #
# Config the trace file, but no real timestamps. The period is chosen via snapshotperiod
#
[Config Tracefile_period]
**.bgMecAppManager.fromTraceFile = true
**.bgMecAppManager.traceFileName = "traceFile.txt"
**.bgMecAppManager.snapshotPeriod = 1
**.bgMecAppManager.admissionControl = false

# ----------------------------------------------------------------------------- #
# Config the trace file with real timestamps.
#
[Config Tracefile_realTimestamp]
**.bgMecAppManager.fromTraceFile = true
**.bgMecAppManager.traceFileName = "traceFile_timestamp_custom.txt"
**.bgMecAppManager.snapshotPeriod = -1
**.bgMecAppManager.admissionControl = false

**.bgMecAppManager.maxBgMecApps = 10
**.bgMecAppManager.minBgMecApps = 6







#